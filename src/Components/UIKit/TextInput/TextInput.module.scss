@use 'sass:math';
@use '@/styles/abstracts' as *;

$css-variables: (
  --text-input-color-main: $color-primary-light,
  --text-input-color-error: $color-danger,
  --text-input-color-background: $color-neutral-light,
  --text-input-disabled-opacity: 0.5,
  --text-input-icon-width: 1.75rem,
  --text-input-icon-height: 1.75rem,
  --text-input-font-family: $font-stack-text,
  --text-input-base-font-size: 1rem,
  --text-input-label-font-scale: 1,
  --text-input-input-font-scale: 1,
  --text-input-error-font-scale: 1,
  --text-input-input-height: 3.5rem,
  --text-input-input-inline-padding: 1.25rem,
  --text-input-error-icon-size: 1em,
  --text-input-border-radius: r(10px),
  --text-input-border-width: r(2px),
  --text-input-placeholder-opacity: 0.7,
  --text-input-password-scale: 0.75,
);

@function use-var($var-name) {
  @return def-var($var-name, $css-variables);
}

@function font-scale($var, $multiplier: 1) {
  @return calc(
    #{use-var(--text-input-base-font-size)} * #{use-var($var)} * #{$multiplier}
  );
}

$error-min-height: font-scale(--text-input-error-font-scale, 1.5);

:export {
  colorMain: use-var(--text-input-color-main);
  colorError: user-var(--text-input-color-error);
}

:global {
  .text-input {
    font-size: use-var(--text-input-base-font-size);
    font-family: use-var(--text-input-font-family);
    color: use-var(--text-input-color-main);

    $self: &;

    &__label,
    &__input {
      background-color: use-var(--text-input-color-background);
    }

    &--error {
      color: use-var(--text-input-color-error);
    }

    &--disabled {
      opacity: use-var(--text-input-disabled-opacity);
    }

    &__label {
      $label-inline-pad: 0.4em;
      $input-inline-pad: use-var(--text-input-input-inline-padding);
      $line-height: 1; /* Do not change */

      display: block;
      width: fit-content;
      padding: 0 $label-inline-pad;
      margin-inline: calc(1px + #{$input-inline-pad} - #{$label-inline-pad});
      margin-bottom: -0.5em * $line-height;
      position: relative;
      z-index: $z-index-1-overlap;
      font-size: font-scale(--text-input-label-font-scale);
      line-height: $line-height;
      word-break: break-word;
      border-radius: r(3px);
      user-select: none;
    }

    &__input-box {
      position: relative;
    }

    $icon-inline-padding: 0.75rem;

    &__input {
      height: use-var(--text-input-input-height);
      width: 100%;
      padding-inline: use-var(--text-input-input-inline-padding);
      font-size: font-scale(--text-input-input-font-scale);
      font-family: inherit;
      font-weight: inherit;
      color: inherit;
      outline: transparent;
      border-width: use-var(--text-input-border-width);
      border-color: use-var(--text-input-color-main);
      border-style: solid;
      border-radius: use-var(--text-input-border-radius);
      background-image: none;
      &::placeholder {
        opacity: use-var(--text-input-placeholder-opacity);
      }
      #{$self}--error & {
        border-color: use-var(--text-input-color-error);
      }
      #{$self}__input-box--icon & {
        padding-right: calc(
          #{use-var(--text-input-icon-width)} + #{$icon-inline-padding} * 2
        );
      }
      &[type='password'] {
        font-size: font-scale(--text-input-input-font-scale, 0.75);
        letter-spacing: 1px;
      }
    }

    &__icon-btn {
      @include button-reset;
      position: absolute;
      right: $icon-inline-padding;
      top: calc(50% - #{use-var(--text-input-icon-height)} / 2);
      display: flex;
      user-select: none;
      &:disabled {
        pointer-events: none;
        cursor: default;
      }
    }

    $line-height: 1.2;

    &__error {
      min-height: $error-min-height;
      padding-inline: 0.3em;
      display: grid;
      gap: 0.5ch;
      grid-template-columns: auto 1fr;
      box-sizing: border-box;
      font-size: font-scale(--text-input-error-font-scale);
      font-weight: bold;
      line-height: $line-height;
      &:empty::after {
        content: '.';
        visibility: hidden;
      }
    }

    &__error-icon {
      margin-top: math.div($line-height - 1, 2) + em;
      width: use-var(--text-input-error-icon-size);
      height: use-var(--text-input-error-icon-size);
    }

    &__error-msg {
      margin: 0;
      overflow: auto;
      word-wrap: break-word;
    }
  }
}
